********************************************************************************
* test-sorting                                                                  
*                                                                               
*  This program tests your sorting function implementations without depending   
* on many other things. It does use print_table and calc_widths, though, so     
* make sure to get those working first.                                         
*                                                                               
*  It runs your sort algorithms to sort some pre-defined tables, and prints the 
* results so you can see whether your sorting is working correctly.             
*                                                                               
*  The alphabetical sorting will be case sensitive.                             
*                                                                               
*  The reference output was made by running this program without command line   
* arguments.                                                                    
*                                                                               
********************************************************************************

**** Testing sort - string data (alphabetical, case sensitive) ****
  Before sorting: 
    [ Another    | table    | full      | of      | strings ]
    [ that       | had some | different | lengths | of      ]
    [ strings    | was      | necessary | to      | make    ]
    [ a          | good     | test      | of      | the     ]
    [ calc_width | function | you       | must    | do      ]
  After sorting column 0
    [ Another    | table    | full      | of      | strings ]
    [ a          | good     | test      | of      | the     ]
    [ calc_width | function | you       | must    | do      ]
    [ strings    | was      | necessary | to      | make    ]
    [ that       | had some | different | lengths | of      ]
  After sorting column 1
    [ calc_width | function | you       | must    | do      ]
    [ a          | good     | test      | of      | the     ]
    [ that       | had some | different | lengths | of      ]
    [ Another    | table    | full      | of      | strings ]
    [ strings    | was      | necessary | to      | make    ]
  After sorting column 2
    [ that       | had some | different | lengths | of      ]
    [ Another    | table    | full      | of      | strings ]
    [ strings    | was      | necessary | to      | make    ]
    [ a          | good     | test      | of      | the     ]
    [ calc_width | function | you       | must    | do      ]
  After sorting column 3
    [ that       | had some | different | lengths | of      ]
    [ calc_width | function | you       | must    | do      ]
    [ Another    | table    | full      | of      | strings ]
    [ a          | good     | test      | of      | the     ]
    [ strings    | was      | necessary | to      | make    ]
  After sorting column 4
    [ calc_width | function | you       | must    | do      ]
    [ strings    | was      | necessary | to      | make    ]
    [ that       | had some | different | lengths | of      ]
    [ Another    | table    | full      | of      | strings ]
    [ a          | good     | test      | of      | the     ]

**** Testing sort - strings of floats (numeric) ****
  Before sorting: 
    [ 1.04 | 2.40 | 3.41 | 0.57 | 6.40 ]
    [ 2.69 | 4.20 | 1.32 | 2.18 | 4.80 ]
    [ 3.41 | 1.20 | 3.14 | 5.60 | 9.23 ]
    [ 1.23 | 4.56 | 5.67 | 6.78 | 7.89 ]
    [ 0.69 | 1.33 | 2.33 | 1.24 | 5.12 ]
  After sorting column 0
    [ 0.69 | 1.33 | 2.33 | 1.24 | 5.12 ]
    [ 1.04 | 2.40 | 3.41 | 0.57 | 6.40 ]
    [ 1.23 | 4.56 | 5.67 | 6.78 | 7.89 ]
    [ 2.69 | 4.20 | 1.32 | 2.18 | 4.80 ]
    [ 3.41 | 1.20 | 3.14 | 5.60 | 9.23 ]
  After sorting column 1
    [ 3.41 | 1.20 | 3.14 | 5.60 | 9.23 ]
    [ 0.69 | 1.33 | 2.33 | 1.24 | 5.12 ]
    [ 1.04 | 2.40 | 3.41 | 0.57 | 6.40 ]
    [ 2.69 | 4.20 | 1.32 | 2.18 | 4.80 ]
    [ 1.23 | 4.56 | 5.67 | 6.78 | 7.89 ]
  After sorting column 2
    [ 2.69 | 4.20 | 1.32 | 2.18 | 4.80 ]
    [ 0.69 | 1.33 | 2.33 | 1.24 | 5.12 ]
    [ 3.41 | 1.20 | 3.14 | 5.60 | 9.23 ]
    [ 1.04 | 2.40 | 3.41 | 0.57 | 6.40 ]
    [ 1.23 | 4.56 | 5.67 | 6.78 | 7.89 ]
  After sorting column 3
    [ 1.04 | 2.40 | 3.41 | 0.57 | 6.40 ]
    [ 0.69 | 1.33 | 2.33 | 1.24 | 5.12 ]
    [ 2.69 | 4.20 | 1.32 | 2.18 | 4.80 ]
    [ 3.41 | 1.20 | 3.14 | 5.60 | 9.23 ]
    [ 1.23 | 4.56 | 5.67 | 6.78 | 7.89 ]
  After sorting column 4
    [ 2.69 | 4.20 | 1.32 | 2.18 | 4.80 ]
    [ 0.69 | 1.33 | 2.33 | 1.24 | 5.12 ]
    [ 1.04 | 2.40 | 3.41 | 0.57 | 6.40 ]
    [ 1.23 | 4.56 | 5.67 | 6.78 | 7.89 ]
    [ 3.41 | 1.20 | 3.14 | 5.60 | 9.23 ]


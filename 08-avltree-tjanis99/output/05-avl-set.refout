////////////////////////////////////////////////////////////////////////////////
// test-avl-set - tests your avl_set methods, comparing behavior to std::set 
//    
//   Except for the extra tree debug info that will print for your avl_set, 
// the output from doing these steps with avl_set should match what you get 
// using std::set
////////////////////////////////////////////////////////////////////////////////
// Testing std::set
////////////////////////////////////////////////////////////////////////////////
Testing insert() for [ 3 2 1 9 5 6 7 8 4 1 ]
  Insert 3: success(3)	Insert 2: success(2)	Insert 1: success(1)	
  Insert 9: success(9)	Insert 5: success(5)	Insert 6: success(6)	
  Insert 7: success(7)	Insert 8: success(8)	Insert 4: success(4)	
  Insert 1: failure	
After insertion, 9 nodes. Iterating to print: [ 1 2 3 4 5 6 7 8 9 ]

Testing count() for [ 1 2 3 4 5 6 7 8 9 42  ]
  (1? 1) (2? 1) (3? 1) (4? 1) (5? 1) (6? 1) (7? 1) (8? 1) (9? 1) (42? 0) 
Testing erase() for [ 2 4 6 8 4 30  ]
  (2? 1) (4? 1) (6? 1) (8? 1) (4? 0) (30? 0) 
After erasure, 5 nodes. Iterating to print: [ 1 3 5 7 9 ]

////////////////////////////////////////////////////////////////////////////////
// Testing avl_set
////////////////////////////////////////////////////////////////////////////////
Testing insert() for [ 3 2 1 9 5 6 7 8 4 1 ]
  Insert 3: success(3)	Insert 2: success(2)	Insert 1: success(1)	
  Insert 9: success(9)	Insert 5: success(5)	Insert 6: success(6)	
  Insert 7: success(7)	Insert 8: success(8)	Insert 4: success(4)	
  Insert 1: failure	
Showing avl_set tree info after insertion:
  preorder:   5 2 1 3 4 7 6 9 8 
  inorder:    1 2 3 4 5 6 7 8 9 
  postorder:  1 4 3 2 6 8 9 7 5 
  levelorder: 5 2 7 1 3 6 9 4 8 
  count: 9; root: 5; height: 3; is_bst: true; balanced? true

After insertion, 9 nodes. Iterating to print: [ 1 2 3 4 5 6 7 8 9 ]

Testing count() for [ 1 2 3 4 5 6 7 8 9 42  ]
  (1? 1) (2? 1) (3? 1) (4? 1) (5? 1) (6? 1) (7? 1) (8? 1) (9? 1) (42? 0) 
Testing erase() for [ 2 4 6 8 4 30  ]
  (2? 1) (4? 1) (6? 1) (8? 1) (4? 0) (30? 0) 
Showing avl_set tree info after erasure:
  preorder:   5 3 1 7 9 
  inorder:    1 3 5 7 9 
  postorder:  1 3 9 7 5 
  levelorder: 5 3 7 1 9 
  count: 5; root: 5; height: 2; is_bst: true; balanced? true

After erasure, 5 nodes. Iterating to print: [ 1 3 5 7 9 ]


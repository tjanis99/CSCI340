////////////////////////////////////////////////////////////////////////////////
// test-avlfix - tests your fix_avl_tree function on known trees  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Constructing and testing - 1->2->3 straight to the right, RR condition
////////////////////////////////////////////////////////////////////////////////

Inserting nodes in tree:
  Inserted node with value 1 as the root.
  Inserted node with value 2 to the right of the node containing 1
  Inserted node with value 3 to the right of the node containing 2

Stats before fix_avl_tree
  preorder:   1 2 3 
  inorder:    1 2 3 
  postorder:  3 2 1 
  levelorder: 1 2 3 
  count: 3; root: 1; min: 1; max: 3; height: 2; is_bst: true; balanced? false 

Your fix_avl_tree fixed 1 problem(s) with AVL

Stats after fix_avl_tree
  preorder:   2 1 3 
  inorder:    1 2 3 
  postorder:  1 3 2 
  levelorder: 2 1 3 
  count: 3; root: 2; min: 1; max: 3; height: 1; is_bst: true; balanced? true

////////////////////////////////////////////////////////////////////////////////
// Constructing and testing - 1<-2<-3 straight to the left, LL condition
////////////////////////////////////////////////////////////////////////////////

Inserting nodes in tree:
  Inserted node with value 3 as the root.
  Inserted node with value 2 to the left of the node containing 3
  Inserted node with value 1 to the left of the node containing 2

Stats before fix_avl_tree
  preorder:   3 2 1 
  inorder:    1 2 3 
  postorder:  1 2 3 
  levelorder: 3 2 1 
  count: 3; root: 3; min: 1; max: 3; height: 2; is_bst: true; balanced? false 

Your fix_avl_tree fixed 1 problem(s) with AVL

Stats after fix_avl_tree
  preorder:   2 1 3 
  inorder:    1 2 3 
  postorder:  1 3 2 
  levelorder: 2 1 3 
  count: 3; root: 2; min: 1; max: 3; height: 1; is_bst: true; balanced? true

////////////////////////////////////////////////////////////////////////////////
// Constructing and testing - 1,3,2 to the right and then left, RL condition
////////////////////////////////////////////////////////////////////////////////

Inserting nodes in tree:
  Inserted node with value 1 as the root.
  Inserted node with value 3 to the right of the node containing 1
  Inserted node with value 2 to the left of the node containing 3

Stats before fix_avl_tree
  preorder:   1 3 2 
  inorder:    1 2 3 
  postorder:  2 3 1 
  levelorder: 1 3 2 
  count: 3; root: 1; min: 1; max: 3; height: 2; is_bst: true; balanced? false 

Your fix_avl_tree fixed 1 problem(s) with AVL

Stats after fix_avl_tree
  preorder:   2 1 3 
  inorder:    1 2 3 
  postorder:  1 3 2 
  levelorder: 2 1 3 
  count: 3; root: 2; min: 1; max: 3; height: 1; is_bst: true; balanced? true

////////////////////////////////////////////////////////////////////////////////
// Constructing and testing - 3,1,2 to the left and then right, LR condition
////////////////////////////////////////////////////////////////////////////////

Inserting nodes in tree:
  Inserted node with value 3 as the root.
  Inserted node with value 1 to the left of the node containing 3
  Inserted node with value 2 to the right of the node containing 1

Stats before fix_avl_tree
  preorder:   3 1 2 
  inorder:    1 2 3 
  postorder:  2 1 3 
  levelorder: 3 1 2 
  count: 3; root: 3; min: 1; max: 3; height: 2; is_bst: true; balanced? false 

Your fix_avl_tree fixed 1 problem(s) with AVL

Stats after fix_avl_tree
  preorder:   2 1 3 
  inorder:    1 2 3 
  postorder:  1 3 2 
  levelorder: 2 1 3 
  count: 3; root: 2; min: 1; max: 3; height: 1; is_bst: true; balanced? true

////////////////////////////////////////////////////////////////////////////////
// Constructing and testing - 4,3,5,2,1 - LL condition at 3
////////////////////////////////////////////////////////////////////////////////

Inserting nodes in tree:
  Inserted node with value 4 as the root.
  Inserted node with value 3 to the left of the node containing 4
  Inserted node with value 5 to the right of the node containing 4
  Inserted node with value 2 to the left of the node containing 3
  Inserted node with value 1 to the left of the node containing 2

Stats before fix_avl_tree
  preorder:   4 3 2 1 5 
  inorder:    1 2 3 4 5 
  postorder:  1 2 3 5 4 
  levelorder: 4 3 5 2 1 
  count: 5; root: 4; min: 1; max: 5; height: 3; is_bst: true; balanced? false 

Your fix_avl_tree fixed 1 problem(s) with AVL

Stats after fix_avl_tree
  preorder:   4 2 1 3 5 
  inorder:    1 2 3 4 5 
  postorder:  1 3 2 5 4 
  levelorder: 4 2 5 1 3 
  count: 5; root: 4; min: 1; max: 5; height: 2; is_bst: true; balanced? true

////////////////////////////////////////////////////////////////////////////////
// Constructing and testing - 4,3,5,1,2 - LR condition at 3
////////////////////////////////////////////////////////////////////////////////

Inserting nodes in tree:
  Inserted node with value 4 as the root.
  Inserted node with value 3 to the left of the node containing 4
  Inserted node with value 5 to the right of the node containing 4
  Inserted node with value 1 to the left of the node containing 3
  Inserted node with value 2 to the right of the node containing 1

Stats before fix_avl_tree
  preorder:   4 3 1 2 5 
  inorder:    1 2 3 4 5 
  postorder:  2 1 3 5 4 
  levelorder: 4 3 5 1 2 
  count: 5; root: 4; min: 1; max: 5; height: 3; is_bst: true; balanced? false 

Your fix_avl_tree fixed 1 problem(s) with AVL

Stats after fix_avl_tree
  preorder:   4 2 1 3 5 
  inorder:    1 2 3 4 5 
  postorder:  1 3 2 5 4 
  levelorder: 4 2 5 1 3 
  count: 5; root: 4; min: 1; max: 5; height: 2; is_bst: true; balanced? true

////////////////////////////////////////////////////////////////////////////////
// Constructing and testing - 2,1,3,5,4 - RL condition at 3
////////////////////////////////////////////////////////////////////////////////

Inserting nodes in tree:
  Inserted node with value 2 as the root.
  Inserted node with value 1 to the left of the node containing 2
  Inserted node with value 3 to the right of the node containing 2
  Inserted node with value 5 to the right of the node containing 3
  Inserted node with value 4 to the left of the node containing 5

Stats before fix_avl_tree
  preorder:   2 1 3 5 4 
  inorder:    1 2 3 4 5 
  postorder:  1 4 5 3 2 
  levelorder: 2 1 3 5 4 
  count: 5; root: 2; min: 1; max: 5; height: 3; is_bst: true; balanced? false 

Your fix_avl_tree fixed 1 problem(s) with AVL

Stats after fix_avl_tree
  preorder:   2 1 4 3 5 
  inorder:    1 2 3 4 5 
  postorder:  1 3 5 4 2 
  levelorder: 2 1 4 3 5 
  count: 5; root: 2; min: 1; max: 5; height: 2; is_bst: true; balanced? true

////////////////////////////////////////////////////////////////////////////////
// Constructing and testing - 2,1,3,4,5 - RR condition at 3
////////////////////////////////////////////////////////////////////////////////

Inserting nodes in tree:
  Inserted node with value 2 as the root.
  Inserted node with value 1 to the left of the node containing 2
  Inserted node with value 3 to the right of the node containing 2
  Inserted node with value 4 to the right of the node containing 3
  Inserted node with value 5 to the right of the node containing 4

Stats before fix_avl_tree
  preorder:   2 1 3 4 5 
  inorder:    1 2 3 4 5 
  postorder:  1 5 4 3 2 
  levelorder: 2 1 3 4 5 
  count: 5; root: 2; min: 1; max: 5; height: 3; is_bst: true; balanced? false 

Your fix_avl_tree fixed 1 problem(s) with AVL

Stats after fix_avl_tree
  preorder:   2 1 4 3 5 
  inorder:    1 2 3 4 5 
  postorder:  1 3 5 4 2 
  levelorder: 2 1 4 3 5 
  count: 5; root: 2; min: 1; max: 5; height: 2; is_bst: true; balanced? true

